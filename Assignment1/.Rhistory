collapse= " - "),
sep = " ~."))
# Computing the model
filtermodel <- lm(f, data=nuclear)
# Finding the covariate with the highest p value
p_values <- summary(filtermodel)$coefficients[2:(length(variables)-length(removed_variables)),4]
max_p_ind <- which.max(p_values)
max_p_name <- names(p_values[max_p_ind])
# Checking if the highest p value is higher than 0.05
if (p_values[max_p_ind]>0.05){
removed_variables <- append(removed_variables, max_p_name)
} else {
break
}
}
summary(filtermodel)
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(cost_pred = predict(model6, nuclear), cost=nuclear$cost)
#ggplot(nuclear, aes(x = cap, y = cost)) +
#  geom_point() +
#  geom_line(color="red", data = predicted_cost, aes(x = cap, y = cost))
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(cost_pred = predict(model6, nuclear), cost=nuclear$cost)
predicted_cost
#ggplot(nuclear, aes(x = cap, y = cost)) +
#  geom_point() +
#  geom_line(color="red", data = predicted_cost, aes(x = cap, y = cost))
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(cost_pred = predict(model6, nuclear), cost=nuclear$cost)
ggplot(nuclear, aes(x = cap, y = cost)) +
geom_point() +
geom_line(color="red", data = predicted_cost, aes(x = cap, y = cost))
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(cost_pred = predict(model6, nuclear), cost=nuclear$cost)
ggplot(nuclear, aes(x = cap, y = cost)) +  geom_point()
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(cost_pred = predict(model6, nuclear), cost=nuclear$cost)
ggplot(nuclear, aes(x = cap, y = cost)) +  geom_point() + geom_point(data=predicted_cost)
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(cost_pred = predict(model6, nuclear), cost=nuclear$cost)
predicted_cost
#ggplot(nuclear, aes(x = cap, y = cost)) +  geom_point() + #geom_point(data=predicted_cost)
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(cost_pred = predict(filtermodel, nuclear), cost=nuclear$cost)
predicted_cost
#ggplot(nuclear, aes(x = cap, y = cost)) +  geom_point() + #geom_point(data=predicted_cost)
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(cost_pred = predict(filtermodel, nuclear), cost=nuclear$cost)
predicted_cost
nuclear
#ggplot(nuclear, aes(x = cap, y = cost)) +  geom_point() + #geom_point(data=predicted_cost)
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(cost_pred = predict(filtermodel, nuclear),
nuclear[variables])
predicted_cost
#ggplot(nuclear, aes(x = cap, y = cost)) +  geom_point() + #geom_point(data=predicted_cost)
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost_pred = predict(filtermodel, nuclear),
nuclear[variables])
ggplot(nuclear, aes(x = cap, y = cost)) +  geom_point() + #geom_point(data=predicted_cost)
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost_pred = predict(filtermodel, nuclear),
nuclear[variables])
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost))
+ geom_point()
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost_pred = predict(filtermodel, nuclear),
nuclear[variables])
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost))
+ geom_point()
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost_pred = predict(filtermodel, nuclear),
nuclear[variables])
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost)) + geom_point() + geom_point(predicted_df)
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost_pred = predict(filtermodel, nuclear),
nuclear[variables])
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost)) + geom_point() + geom_point(data=predicted_df)
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost_pred = predict(filtermodel, nuclear),
nuclear[variables])
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost)) + geom_point() + geom_point(data=predicted_df)
pred_plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost_pred = predict(filtermodel, nuclear),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost)) + geom_point() + geom_point(data=predicted_df)
#pred_plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = predict(filtermodel, nuclear),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost)) + geom_point() + geom_point(data=predicted_df)
#pred_plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = predict(filtermodel, nuclear),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost)) + geom_point() + geom_point(data=predicted_df)
pred_plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = predict(filtermodel, nuclear),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost)) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red")
pred_plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost)) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red")
pred_plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost)) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red")
pred_plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost)) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red") +
geom_point(data=predicted_P, color="purple")
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = cost)) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red") +
geom_point(data=predicted_df_P, color="purple")
pred_plot
pred_plot <- ggplot(nuclear, aes(x = cap, y = log(cost)) +
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = predict(model2, nuclear),
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = predict(model2, nuclear),
nuclear[variables])
predicted_df_P <- data.frame(cost = predict(filtermodel, nuclear),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = log(cost)) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red") +
geom_point(data=predicted_df_P, color="purple")
pred_plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = predict(model2, nuclear),
nuclear[variables])
predicted_df_P <- data.frame(cost = predict(filtermodel, nuclear),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = log(cost))) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red") +
geom_point(data=predicted_df_P, color="purple")
pred_plot
d.new = data.frame(data=70.0, t1=13, t2=50, cap=800, pr=1, ne=0, ct=0, bw=1, cum.n=8, pt=1)
predict(filtermodel, d.new, interval="confidence")
d.new = data.frame(data=70.0, t1=13, t2=50, cap=800, pr=1, ne=0, ct=0, bw=1, cum.n=8, pt=1)
d.new
predict(filtermodel, d.new, interval="confidence")
d.new = data.frame(data=70.0, t1=13, t2=50, cap=800, pr=1, ne=0, ct=0, bw=1, cum.n=8, pt=1)
d.new
nuclear
predict(filtermodel, d.new, interval="confidence")
predict(filtermodel, d.new, interval="confidence")
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(exp(cost) = predict(model2, nuclear),
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = log(cost))) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red") +
geom_point(data=predicted_df_P, color="purple")
pred_plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = log(cost))) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red") +
geom_point(data=predicted_df_P, color="purple")
pred_plot + theme(legend.position="top")
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = log(cost))) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red") +
geom_point(data=predicted_df_P, color="purple")
pred_plot + theme(legend.position="top")
plot <- ggplot(nuclear, aes(x = cap, y = cost)) +
geom_point(data = predicted_df_P, aes(x = cap, y = cost, color ="red")) +
geom_point(data = predicted_df_P, aes(x=cap, y=cost, color="purple"))
plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = log(cost))) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red") +
geom_point(data=predicted_df_P, color="purple")
pred_plot + theme(legend.position="top")
plot <- ggplot()+
geom_point(data=nuclear, aes(x=cap, y=cost, color="blue"))
geom_point(data = predicted_df_P, aes(x = cap, y = cost, color ="red")) +
geom_point(data = predicted_df_P, aes(x=cap, y=cost, color="purple"))
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = log(cost))) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red") +
geom_point(data=predicted_df_P, color="purple")
pred_plot + theme(legend.position="top")
plot <- ggplot()+
geom_point(data=nuclear, aes(x=cap, y=cost, color="blue"))+
geom_point(data = predicted_df_P, aes(x = cap, y = cost, color ="red")) +
geom_point(data = predicted_df_P, aes(x=cap, y=cost, color="purple"))
plot
plot <- ggplot(data=)+
geom_point(data=nuclear, aes(x=cap, y=cost, color="blue"))+
geom_point(data = predicted_df_P, aes(x = cap, y = cost, color ="red")) +
geom_point(data = predicted_df_P, aes(x=cap, y=cost, color="purple"))
View(nuclear)
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- predict(model2, nuclear)
predicted_cost_p <- predict(filtermodel, nuclear)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
predicted_df
pred_plot <- ggplot(nuclear, aes(x = cap, y = log(cost))) +
geom_point(data=nuclear, color="blue") +
geom_point(data=predicted_df, color="red") +
geom_point(data=predicted_df_P, color="purple")
pred_plot + theme(legend.position="top")
plot <- ggplot(datanuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- predict(model2, nuclear)
predicted_cost_p <- predict(filtermodel, nuclear)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
plot <- ggplot(datanuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted_cost, aes(y=cost, color="c2", shape="sh2")) +
geom_point(data=predicted_cost_p, aes(y=cost, color="c3", shape="sh3")) +
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- predict(model2, nuclear)
predicted_cost_p <- predict(filtermodel, nuclear)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
plot <- ggplot(datanuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted_cost, aes(y=cost, color="c2", shape="sh2")) +
geom_point(data=predicted_cost_p, aes(y=cost, color="c3", shape="sh3"))
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- predict(model2, nuclear)
predicted_cost_p <- predict(filtermodel, nuclear)
predicted_df <- data.frame(cost = exp(predict(model2, nuclear)),
nuclear[variables])
predicted_df_P <- data.frame(cost = exp(predict(filtermodel, nuclear)),
nuclear[variables])
nuclear
plot <- ggplot(data=nuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted_cost, aes(y=cost, color="c2", shape="sh2")) +
geom_point(data=predicted_cost_p, aes(y=cost, color="c3", shape="sh3"))
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- predict(model2, nuclear)
predicted_cost_p <- predict(filtermodel, nuclear)
typeof(predicted_cost)
plot <- ggplot(data=nuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted_cost, aes(y=cost, color="c2", shape="sh2")) +
geom_point(data=predicted_cost_p, aes(y=cost, color="c3", shape="sh3"))
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- predict(model2, nuclear)
predicted_cost_p <- predict(filtermodel, nuclear)
predicted_cost
typeof(predicted_cost)
plot <- ggplot(data=nuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted_cost, aes(y=cost, color="c2", shape="sh2")) +
geom_point(data=predicted_cost_p, aes(y=cost, color="c3", shape="sh3"))
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(predict(model2, nuclear))
predicted_cost_p <- data.frame(predict(filtermodel, nuclear))
predicted_cost
nuclear
plot <- ggplot(data=nuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted_cost, aes(y=cost, color="c2", shape="sh2")) +
geom_point(data=predicted_cost_p, aes(y=cost, color="c3", shape="sh3"))
plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(predict(model2, nuclear))
predicted_cost_p <- data.frame(predict(filtermodel, nuclear))
predicted_cost
nuclear
colors <- c("c1" = "blue", "c2" = "red" , "c3" = "purple", )
shapes <- c("sh1" = 10, "sh2" = 10 , "sh3" = 10 )
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(predict(model2, nuclear))
predicted_cost_p <- data.frame(predict(filtermodel, nuclear))
predicted_cost
nuclear
colors <- c("c1" = "blue", "c2" = "red" , "c3" = "purple")
shapes <- c("sh1" = 10, "sh2" = 10 , "sh3" = 10 )
plot <- ggplot(data=nuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted_cost, aes(y=cost, color="c2", shape="sh2")) +
geom_point(data=predicted_cost_p, aes(y=cost, color="c3", shape="sh3"))
plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(predict(model2, nuclear))
predicted_cost_p <- data.frame(predict(filtermodel, nuclear))
predicted_cost
nuclear
colors <- c("c1" = "blue", "c2" = "red" , "c3" = "purple")
shapes <- c("sh1" = 10, "sh2" = 10 , "sh3" = 10 )
plot <- ggplot(data=nuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted_cost, aes(y=exp(log(cost)), color="c2", shape="sh2")) +
geom_point(data=predicted_cost_p, aes(y=exp(log(cost)), color="c3", shape="sh3"))
plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(predict(model2, nuclear))
predicted_cost_p <- data.frame(predict(filtermodel, nuclear))
predicted_cost
nuclear
colors <- c("c1" = "blue", "c2" = "red" , "c3" = "purple")
shapes <- c("sh1" = 10, "sh2" = 10 , "sh3" = 10 )
plot <- ggplot(data=nuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted_cost, aes(y=log(cost), color="c2", shape="sh2")) +
geom_point(data=predicted_cost_p, aes(y=log(cost), color="c3", shape="sh3"))
plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(predict(model2, nuclear))
predicted_cost_p <- data.frame(predict(filtermodel, nuclear))
names(predicted_cost)
nuclear
colors <- c("c1" = "blue", "c2" = "red" , "c3" = "purple")
shapes <- c("sh1" = 10, "sh2" = 10 , "sh3" = 10 )
plot <- ggplot(data=nuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted_cost, aes(y=log(cost), color="c2", shape="sh2")) +
geom_point(data=predicted_cost_p, aes(y=log(cost), color="c3", shape="sh3"))
plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(predict(model2, nuclear))
predicted_cost_p <- data.frame(predict(filtermodel, nuclear))
names(predicted_cost)
nuclear
colors <- c("c1" = "blue", "c2" = "red" , "c3" = "purple")
shapes <- c("sh1" = 10, "sh2" = 10 , "sh3" = 10 )
plot <- ggplot(data=nuclear, aes(x = cap))+
geom_point(data=nuclear, aes(y=cost, color="c1", shape="sh1")) +
geom_point(data=predicted_cost, aes(y=names(predicted_cost)
, color="c2", shape="sh2")) +
geom_point(data=predicted_cost_p, aes(y=names(predicted_cost_p)
, color="c3", shape="sh3"))
plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(predict(model2, nuclear))
predicted_cost_p <- data.frame(predict(filtermodel, nuclear))
names(predicted_cost)
nuclear
colors <- c("c1" = "blue", "c2" = "red" , "c3" = "purple")
shapes <- c("sh1" = 10, "sh2" = 10 , "sh3" = 10 )
plot <- ggplot(data=nuclear, aes(x = cap))+
geom_point(data=nuclear,
aes(y=cost,
color="c1",
shape="sh1")) +
geom_point(data=predicted_cost,
aes(y=names(predicted_cost),
color="c2",
shape="sh2")) +
geom_point(data=predicted_cost_p,
aes(y=names(predicted_cost_p),
color="c3",
shape="sh3"))
plot
# Making plots of the final model from forward selection with the criteria of p values < 0.05
library(ggplot2)
predicted_cost <- data.frame(predict(model2, nuclear))
predicted_cost_p <- data.frame(predict(filtermodel, nuclear))
names(predicted_cost)
nuclear
colors <- c("c1" = "blue", "c2" = "red" , "c3" = "purple")
shapes <- c("sh1" = 10, "sh2" = 10 , "sh3" = 10 )
plot <- ggplot(data=nuclear, aes(x = cap))+
geom_point(data=nuclear,
aes(y=cost,
color="c1",
shape="sh1")) +
geom_point(data=predicted_cost,
aes(y=names(predicted_cost),
color="c2",
shape="sh2")) +
geom_point(data=predicted_cost_p,
aes(y=names(predicted_cost_p),
color="c3",
shape="sh3"))
plot
